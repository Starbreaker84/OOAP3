## Классы поведения

На данном этапе зададим каркас поведения элементов системы и их взаимодействия между собой.

Для всех классов имеет смысл определить общий метод equals, который может быть унаследован от общего предка Global. Данный метод позволит сравнивать объекты.

Также не забудем для всех методов, которые меняют состояние сущности, добавить методы получения статуса отработки такого метода.

Также упомянем о классе Logger - стандартный класс реализации логирования, основанный на опыте предыдущих проектов.

### Location
Поля:
- id - идентификатор локации;
- path - список путей выхода по идентификатору локации
- items - список предметов локации

Методы:
- takeItem - метод взятия предмета
- getPath - метод перехода на другую локацию

### LocationState
Поля:
- visited - логическое поле посещения локации игроком

Методы:
- chngeState - смена состояния посещения локации

### Entity
Поля:
- id - индентификатор предмета
- name - описание
- capasity - объем предмета (кол-во раз использования)

Методы:
- getName - получение описания предмета
- use - использование предмета (свойство, которое каждый предмет реализует самостоятельно)

### Player
Поля:
- name - имя игрока
- bag - сумка для хранения предметов
- hand - рука, в которой находится предмет

Методы:
- setName/getName - работа с именем игрока
- getBag - получение списка предметов
- getItem - взятие предмета
- useItem - использование предмета в руке

### Hand
Поля:
- item - предмет в руке

Методы:
- getItem - положить предмет в руку
- useItem - использование предмета в руке

### Bag
Поля:
- items - предметы

Методы:
- getItem - получение предмета

### World
Поля:
- playerName - имя игрока

Методы:
- init - инициализация мира игры

### Game end
Поля:
- events - набор событий, характерный для концовки

Методы:
- getEnd - вызов концовки игры

